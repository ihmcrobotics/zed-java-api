// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
\brief Structure containing a set of parameters for the body tracking module.
<p>
The default constructor sets all parameters to their default settings.
\note Parameters can be user adjusted.
 */
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_BodyTrackingParameters extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_BodyTrackingParameters() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_BodyTrackingParameters(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_BodyTrackingParameters(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_BodyTrackingParameters position(long position) {
        return (SL_BodyTrackingParameters)super.position(position);
    }
    @Override public SL_BodyTrackingParameters getPointer(long i) {
        return new SL_BodyTrackingParameters((Pointer)this).offsetAddress(i);
    }

	/**
	\brief Id of the module instance.
	<p>
	This is used to identify which body tracking module instance is used.
	 */
	public native @Cast("unsigned int") int instance_module_id(); public native SL_BodyTrackingParameters instance_module_id(int setter);

	/**
	\brief Whether the body tracking system includes body/person tracking capabilities across a sequence of images.
	<p>
	Default: true
	 */
	public native @Cast("bool") boolean enable_tracking(); public native SL_BodyTrackingParameters enable_tracking(boolean setter);

	/**
	\brief Whether the body/person masks will be computed.
	<p>
	Default: false
	 */
	public native @Cast("bool") boolean enable_segmentation(); public native SL_BodyTrackingParameters enable_segmentation(boolean setter);

	/**
	\brief \ref SL_BODY_TRACKING_MODEL to use.
	
	Default: \ref SL_BODY_TRACKING_MODEL_HUMAN_BODY_ACCURATE
	 */
	public native @Cast("SL_BODY_TRACKING_MODEL") int detection_model(); public native SL_BodyTrackingParameters detection_model(int setter);

	/**
	\brief Whether to apply the body fitting.
	<p>
	Default: false
	 */
	public native @Cast("bool") boolean enable_body_fitting(); public native SL_BodyTrackingParameters enable_body_fitting(boolean setter);

	/**
	\brief Body format to be outputted by the ZED SDK with \ref sl_retrieve_bodies().
	
	Default: \ref SL_BODY_FORMAT_BODY_18
	 */
	public native @Cast("SL_BODY_FORMAT") int body_format(); public native SL_BodyTrackingParameters body_format(int setter);

	/**
	\brief Selection of keypoints to be outputted by the ZED SDK with \ref sl_retrieve_bodies().
    
	Default: \ref SL_BODY_KEYPOINTS_SELECTION_FULL
	 */
	public native @Cast("SL_BODY_KEYPOINTS_SELECTION") int body_selection(); public native SL_BodyTrackingParameters body_selection(int setter);

	/**
	\brief Upper depth range for detections.
	
	Default: -1.f (value set in SL_InitParameters.depth_maximum_distance)
	\note The value cannot be greater than SL_InitParameters.depth_maximum_distance and its unit is defined in SL_InitParameters.coordinate_unit.
	 */
	public native float max_range(); public native SL_BodyTrackingParameters max_range(float setter);

// #if 0
// #endif
	/**
	\brief Prediction duration of the ZED SDK when an object is not detected anymore before switching its state to \ref SL_OBJECT_TRACKING_STATE_SEARCHING.
	
	It prevents the jittering of the object state when there is a short misdetection.
    \n The user can define their own prediction time duration.
	\n Default: 0.2f
    \note During this time, the object will have \ref SL_OBJECT_TRACKING_STATE_OK state even if it is not detected.
    \note The duration is expressed in seconds.
    \warning \ref prediction_timeout_s will be clamped to 1 second as the prediction is getting worse with time.
    \warning Setting this parameter to 0 disables the ZED SDK predictions.
	*/
	public native float prediction_timeout_s(); public native SL_BodyTrackingParameters prediction_timeout_s(float setter);
	/**
	\brief Whether to allow inference to run at a lower precision to improve runtime and memory usage.
	<p>
	It might increase the initial optimization time and could include downloading calibration data or calibration cache and slightly reduce the accuracy.
	\note The fp16 is automatically enabled if the GPU is compatible and provides a speed up of almost x2 and reduce memory usage by almost half, no precision loss.
	\note This setting allow int8 precision which can speed up by another x2 factor (compared to fp16, or x4 compared to fp32) and half the fp16 memory usage, however some accuracy could be lost.
	\note The accuracy loss should not exceed 1-2% on the compatible models.
	\note The current compatible models are all [SL_AI_MODELS_HUMAN_BODY_XXXX](\ref SL_AI_MODELS).
	 */
	public native @Cast("bool") boolean allow_reduced_precision_inference(); public native SL_BodyTrackingParameters allow_reduced_precision_inference(boolean setter);
}
