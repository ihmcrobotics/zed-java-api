// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_CommunicationParameters extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_CommunicationParameters() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_CommunicationParameters(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_CommunicationParameters(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_CommunicationParameters position(long position) {
        return (SL_CommunicationParameters)super.position(position);
    }
    @Override public SL_CommunicationParameters getPointer(long i) {
        return new SL_CommunicationParameters((Pointer)this).offsetAddress(i);
    }

	public native @Cast("SL_COMM_TYPE") int communication_type(); public native SL_CommunicationParameters communication_type(int setter);
	public native @Cast("unsigned int") int ip_port(); public native SL_CommunicationParameters ip_port(int setter);
	public native @Cast("char") byte ip_add(int i); public native SL_CommunicationParameters ip_add(int i, byte setter);
	@MemberGetter public native @Cast("char*") BytePointer ip_add();
}
