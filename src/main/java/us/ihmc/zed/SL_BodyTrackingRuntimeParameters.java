// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import org.bytedeco.cuda.cudart.CUctx_st;
import org.bytedeco.cuda.cudart.CUstream_st;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
\brief Structure containing a set of runtime parameters for the body tracking module.
<p>
The default constructor sets all parameters to their default settings.
\note Parameters can be adjusted by the user.
 */
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_BodyTrackingRuntimeParameters extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_BodyTrackingRuntimeParameters() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_BodyTrackingRuntimeParameters(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_BodyTrackingRuntimeParameters(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_BodyTrackingRuntimeParameters position(long position) {
        return (SL_BodyTrackingRuntimeParameters)super.position(position);
    }
    @Override public SL_BodyTrackingRuntimeParameters getPointer(long i) {
        return new SL_BodyTrackingRuntimeParameters((Pointer)this).offsetAddress(i);
    }

	/**
	\brief Confidence threshold.
	<p>
	From 1 to 100, with 1 meaning a low threshold, more uncertain objects and 99 very few but very precise objects.
	\n Default: 20.f
	\note If the scene contains a lot of objects, increasing the confidence can slightly speed up the process, since every object instance is tracked.
	 */
	public native float detection_confidence_threshold(); public native SL_BodyTrackingRuntimeParameters detection_confidence_threshold(float setter);

	/**
	\brief Minimum threshold for the keypoints.
	<p>
	The ZED SDK will only output the keypoints of the skeletons with threshold greater than this value.
	\n Default: 0
	\note It is useful, for example, to remove unstable fitting results when a skeleton is partially occluded.
	 */
	public native int minimum_keypoints_threshold(); public native SL_BodyTrackingRuntimeParameters minimum_keypoints_threshold(int setter);
	/**
	\brief Control of the smoothing of the fitted fused skeleton.
	<p>
	It is ranged from 0 (low smoothing) and 1 (high smoothing).
	Default: 0
	 */
	public native float skeleton_smoothing(); public native SL_BodyTrackingRuntimeParameters skeleton_smoothing(float setter);
}
