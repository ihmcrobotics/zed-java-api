// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import org.bytedeco.cuda.cudart.CUctx_st;
import org.bytedeco.cuda.cudart.CUstream_st;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
\brief Holds the metrics of a sender in the fusion process.
 */
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_CameraMetrics extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_CameraMetrics() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_CameraMetrics(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_CameraMetrics(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_CameraMetrics position(long position) {
        return (SL_CameraMetrics)super.position(position);
    }
    @Override public SL_CameraMetrics getPointer(long i) {
        return new SL_CameraMetrics((Pointer)this).offsetAddress(i);
    }

	public native @ByRef SL_CameraIdentifier uuid(); public native SL_CameraMetrics uuid(SL_CameraIdentifier setter);

	/**
	 * \brief FPS of the received data.
	 * 
	 */
	public native float received_fps(); public native SL_CameraMetrics received_fps(float setter);

	/**
	 * \brief Latency (in seconds) of the received data.
	 * Timestamp difference between the time when the data are sent and the time they are received (mostly introduced when using the local network workflow).
	 */
	public native float received_latency(); public native SL_CameraMetrics received_latency(float setter);

	/**
	 * \brief Latency (in seconds) after Fusion synchronization.
	 * Difference between the timestamp of the data received and the timestamp at the end of the Fusion synchronization.
	 */
	public native float synced_latency(); public native SL_CameraMetrics synced_latency(float setter);

	/**
	 * \brief Is set to false if no data in this batch of metrics.
	 * 
	 */
	public native @Cast("bool") boolean is_present(); public native SL_CameraMetrics is_present(boolean setter);

	/**
	 * \brief Skeleton detection percent during the last second.
	 * Number of frames with at least one detection / number of frames, over the last second.
	 * A low value means few detections occured lately for this sender.
	 */
	public native float ratio_detection(); public native SL_CameraMetrics ratio_detection(float setter);

	/**
	 * \brief Average data acquisition timestamp difference.
	 * Average standard deviation of sender's period since the start.
	 */
	public native float delta_ts(); public native SL_CameraMetrics delta_ts(float setter);
}
