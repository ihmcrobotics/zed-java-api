// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
\brief Structure containing the intrinsic parameters of a camera.
*/
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_CameraParameters extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_CameraParameters() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_CameraParameters(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_CameraParameters(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_CameraParameters position(long position) {
        return (SL_CameraParameters)super.position(position);
    }
    @Override public SL_CameraParameters getPointer(long i) {
        return new SL_CameraParameters((Pointer)this).offsetAddress(i);
    }

	/**
	\brief Focal length in pixels along x axis.
	 */
	public native float fx(); public native SL_CameraParameters fx(float setter);

	/**
	\brief Focal length in pixels along y axis.
	 */
	public native float fy(); public native SL_CameraParameters fy(float setter);

	/**
	\brief Optical center along x axis, defined in pixels (usually close to width / 2).
	 */
	public native float cx(); public native SL_CameraParameters cx(float setter);

	/**
	\brief Optical center along y axis, defined in pixels (usually close to height / 2).
	 */
	public native float cy(); public native SL_CameraParameters cy(float setter);

	/**
	\brief Distortion factor : [k1, k2, p1, p2, k3, k4, k5, k6, s1, s2, s3, s4].
	
	Radial (k1, k2, k3, k4, k5, k6), Tangential (p1,p2) and Prism (s1, s2, s3, s4) distortion.
	 */
	public native double disto(int i); public native SL_CameraParameters disto(int i, double setter);
	@MemberGetter public native DoublePointer disto();

	/**
	\brief Vertical field of view, in degrees.
	 */
	public native float v_fov(); public native SL_CameraParameters v_fov(float setter);

	/**
	\brief Horizontal field of view, in degrees.
	 */
	public native float h_fov(); public native SL_CameraParameters h_fov(float setter);

	/**
	\brief Diagonal field of view, in degrees.
	 */
	public native float d_fov(); public native SL_CameraParameters d_fov(float setter);

	/**
	\brief Size in pixels of the images given by the camera.
	 */
	public native @ByRef SL_Resolution image_size(); public native SL_CameraParameters image_size(SL_Resolution setter);

	/**
	\brief Real focal length in millimeters.
	 */
	public native float focal_length_metric(); public native SL_CameraParameters focal_length_metric(float setter);
}
