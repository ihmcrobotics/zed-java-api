// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
\brief Holds the metrics of the fusion process.
 */
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_FusionMetrics extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_FusionMetrics() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_FusionMetrics(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_FusionMetrics(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_FusionMetrics position(long position) {
        return (SL_FusionMetrics)super.position(position);
    }
    @Override public SL_FusionMetrics getPointer(long i) {
        return new SL_FusionMetrics((Pointer)this).offsetAddress(i);
    }

	/**
	 * \brief Mean number of camera that provides data during the past second.
	 * 
	 */
	public native float mean_camera_fused(); public native SL_FusionMetrics mean_camera_fused(float setter);

	/**
	 * \brief Standard deviation of the data timestamp fused, the lower the better.
	 * 
	 */
	public native float mean_stdev_between_camera(); public native SL_FusionMetrics mean_stdev_between_camera(float setter);

	/**
	 * \brief Sender metrics.
	 * 
	 */
	public native @ByRef SL_CameraMetrics camera_individual_stats(int i); public native SL_FusionMetrics camera_individual_stats(int i, SL_CameraMetrics setter);
	@MemberGetter public native SL_CameraMetrics camera_individual_stats();
}
