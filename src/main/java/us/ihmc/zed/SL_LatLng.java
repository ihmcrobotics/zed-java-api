// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import org.bytedeco.cuda.cudart.CUctx_st;
import org.bytedeco.cuda.cudart.CUstream_st;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
 * \brief Represents a world position in LatLng format.
 *
 */
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_LatLng extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_LatLng() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_LatLng(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_LatLng(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_LatLng position(long position) {
        return (SL_LatLng)super.position(position);
    }
    @Override public SL_LatLng getPointer(long i) {
        return new SL_LatLng((Pointer)this).offsetAddress(i);
    }

	/**
	 * \brief Latitude coordinate in radian.
	 *
	 */
	public native double latitude(); public native SL_LatLng latitude(double setter);
	/**
	 * \brief Longitude coordinate in radian.
	 *
	 */
	public native double longitude(); public native SL_LatLng longitude(double setter);
	/**
	 * \brief Altitude coordinate in meters.
	 *
	 */
	public native double altitude(); public native SL_LatLng altitude(double setter);
}
