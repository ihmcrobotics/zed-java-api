// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import org.bytedeco.cuda.cudart.CUctx_st;
import org.bytedeco.cuda.cudart.CUstream_st;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
 \brief Structure representing a quaternion.
 */
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_Quaternion extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_Quaternion() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_Quaternion(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_Quaternion(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_Quaternion position(long position) {
        return (SL_Quaternion)super.position(position);
    }
    @Override public SL_Quaternion getPointer(long i) {
        return new SL_Quaternion((Pointer)this).offsetAddress(i);
    }

	/** \brief First component of the quaternion.*/
	public native float x(); public native SL_Quaternion x(float setter);
	/** \brief Second component of the quaternion.*/
	public native float y(); public native SL_Quaternion y(float setter);
	/** \brief Third component of the quaternion.*/
	public native float z(); public native SL_Quaternion z(float setter);
	/** \brief Forth component of the quaternion.*/
	public native float w(); public native SL_Quaternion w(float setter);
}
