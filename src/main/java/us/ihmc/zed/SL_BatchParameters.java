// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import org.bytedeco.cuda.cudart.CUctx_st;
import org.bytedeco.cuda.cudart.CUstream_st;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
\brief Structure containing a set of parameters for batch object detection.
<p>
The default constructor sets all parameters to their default settings.
\note Parameters can be user adjusted.
*/
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_BatchParameters extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_BatchParameters() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_BatchParameters(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_BatchParameters(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_BatchParameters position(long position) {
        return (SL_BatchParameters)super.position(position);
    }
    @Override public SL_BatchParameters getPointer(long i) {
        return new SL_BatchParameters((Pointer)this).offsetAddress(i);
    }

	/**
	\brief Whether to enable the batch option in the object detection module.
	<p>
	Batch queueing system provides:
	- deep-learning based re-identification
	- trajectory smoothing and filtering
	<p>
	Default: false
    \note To activate this option, \ref enable must be set to true.
	 */
	public native @Cast("bool") boolean enable(); public native SL_BatchParameters enable(boolean setter);
	/**
	\brief Max retention time in seconds of a detected object.
	<p>
	After this time, the same object will mostly have a different id.
	 */
	public native float id_retention_time(); public native SL_BatchParameters id_retention_time(float setter);
	/**
	\brief Trajectories will be output in batch with the desired latency in seconds.
	<p>
	During this waiting time, re-identification of objects is done in the background.
	\note Specifying a short latency will limit the search (falling in timeout) for previously seen object ids but will be closer to real time output.
	\note Specifying a long latency will reduce the change of timeout in re-identification but increase difference with live output.
	 */
	public native float latency(); public native SL_BatchParameters latency(float setter);
}
