// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import org.bytedeco.cuda.cudart.CUctx_st;
import org.bytedeco.cuda.cudart.CUstream_st;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;


/**
 * \brief Represents a world position in UTM format.
 *
 */
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_UTM extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_UTM() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_UTM(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_UTM(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_UTM position(long position) {
        return (SL_UTM)super.position(position);
    }
    @Override public SL_UTM getPointer(long i) {
        return new SL_UTM((Pointer)this).offsetAddress(i);
    }

	/**
	 * \brief Northing coordinate.
	 *
	 */
	public native double northing(); public native SL_UTM northing(double setter);
	/**
	 * \brief Easting coordinate.
	 *
	 */
	public native double easting(); public native SL_UTM easting(double setter);
	/**
	 * \brief Gamma coordinate.
	 *
	 */
	public native double gamma(); public native SL_UTM gamma(double setter);
	/**
	 * \brief UTMZone of the coordinate.
	 *
	 */
	public native @Cast("char") byte UTMZone(int i); public native SL_UTM UTMZone(int i, byte setter);
	@MemberGetter public native @Cast("char*") BytePointer UTMZone();
}
