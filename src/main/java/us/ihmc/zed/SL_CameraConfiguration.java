// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.zed;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.zed.global.zed.*;



/**
\brief Structure containing information about the camera sensor. 
\note This object is meant to be used as a read-only container, editing any of its field won't impact the ZED SDK.
\warning \ref SL_CalibrationParameters are returned in \ref SL_COORDINATE_SYSTEM_IMAGE, they are not impacted by the \ref SL_InitParameters.coordinate_system.
*/
@Properties(inherit = us.ihmc.zed.ZEDJavaAPIConfig.class)
public class SL_CameraConfiguration extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SL_CameraConfiguration() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SL_CameraConfiguration(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SL_CameraConfiguration(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SL_CameraConfiguration position(long position) {
        return (SL_CameraConfiguration)super.position(position);
    }
    @Override public SL_CameraConfiguration getPointer(long i) {
        return new SL_CameraConfiguration((Pointer)this).offsetAddress(i);
    }

	/**
	\brief Intrinsics and extrinsic stereo parameters for rectified/undistorted images.
	*/
	public native @ByRef SL_CalibrationParameters calibration_parameters(); public native SL_CameraConfiguration calibration_parameters(SL_CalibrationParameters setter);
	/**
	\brief Intrinsics and extrinsic stereo parameters for unrectified/distorted images.
	*/
	public native @ByRef SL_CalibrationParameters calibration_parameters_raw(); public native SL_CameraConfiguration calibration_parameters_raw(SL_CalibrationParameters setter);
	/**
	\brief Internal firmware version of the camera.
	*/
	public native @Cast("unsigned int") int firmware_version(); public native SL_CameraConfiguration firmware_version(int setter);
	/**
	\brief FPS of the camera.
	*/
	public native float fps(); public native SL_CameraConfiguration fps(float setter);
	/**
	\brief Resolution of the camera.
	*/
	public native @ByRef SL_Resolution resolution(); public native SL_CameraConfiguration resolution(SL_Resolution setter);
}
